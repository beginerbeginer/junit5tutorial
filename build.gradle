plugins {
    id 'java'
}

group 'com.junit5book'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


test {
    // JUnit platform を使う設定
    useJUnitPlatform()

    testLogging {
        // テスト時の標準出力と標準エラー出力を表示する
        showStandardStreams true
        // イベントを出力する (TestLogEvent)
        events 'started', 'skipped', 'passed', 'failed'
        // 例外発生時の出力設定 (TestExceptionFormat)
        exceptionFormat 'full'
    }
}

/**
 * gradle4.7以降testCompileは非推奨になりtestImplementationに置き換え　参照URL：https://docs.gradle.org/4.7/userguide/java_plugin.html#sec:java_plugin_and_dependency_management
 * compileではなくimplementationを使うメリットの説明：https://docs.gradle.org/current/userguide/java_library_plugin.html
 *
 * testImplementationを使うと、テスト実行時に必要なライブラリだけがクラスパスに追加される
 * これにより、テスト実行時に必要なライブラリのみがクラスパスに追加される
 * testCompileは、テスト実行時に必要なライブラリだけでなく、ビルド時に必要なライブラリもクラスパスに追加される
 * これにより、ビルド時に必要なライブラリがテスト実行時にも必要になる。
 */
dependencies {
    def junitVersion = '5.0.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitVersion
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:' + junitVersion
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testCompileOnly 'org.apiguardian:apiguardian-api:1.1.2'
    testImplementation 'org.mockito:mockito-core:2.+'
}